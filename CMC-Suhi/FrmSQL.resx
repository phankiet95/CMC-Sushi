<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="picIcon.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>